export function initForm() {
    const form = document.getElementById('registrationForm');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const agreeCheckbox = document.getElementById('agree');
    const submitButton = document.getElementById('submitButton');

    const emailError = document.getElementById('emailError');
    const passwordError = document.getElementById('passwordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');
    const agreeError = document.getElementById('agreeError');

    const togglePassword = document.getElementById('togglePassword');
    const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');

    function validateEmail(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(String(email).toLowerCase());
    }

    function validatePassword(password) {
        const hasUpperCase = /[A-Z]/.test(password);
        const hasNumber = /\d/.test(password);
        return password.length >= 5 && hasUpperCase && hasNumber;
    }

    function validateForm() {
        let isValid = true;

        // Validate email
        if (!validateEmail(emailInput.value)) {
            emailError.textContent = '–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π e-mail';
            emailError.classList.add('show');
            isValid = false;
        } else {
            emailError.classList.remove('show');
        }

        // Validate password
        if (!validatePassword(passwordInput.value)) {
            passwordError.textContent = '–í–∏–º–æ–≥–∏: 5 —Å–∏–º–≤–æ–ª—ñ–≤, –≤–µ–ª–∏–∫–∞ –ª—ñ—Ç–µ—Ä–∞, —á–∏—Å–ª–æ.';
            passwordError.classList.add('show');
            isValid = false;
        } else {
            passwordError.classList.remove('show');
        }

        // Validate confirm password
        if (passwordInput.value !== confirmPasswordInput.value) {
            confirmPasswordError.textContent = '–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å';
            confirmPasswordError.classList.add('show');
            isValid = false;
        } else {
            confirmPasswordError.classList.remove('show');
        }

        // Validate agreement
        if (!agreeCheckbox.checked) {
            agreeError.textContent = '–í–∏ –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏—Ç–∏—Å—å –∑ —É–º–æ–≤–∞–º–∏ –ª—ñ—Ü–µ–Ω–∑—ñ–π–Ω–æ—ó —É–≥–æ–¥–∏';
            agreeError.classList.add('show');
            isValid = false;
        } else {
            agreeError.classList.remove('show');
        }

        // Enable or disable submit button
        submitButton.disabled = !isValid;

        return isValid;
    }

    emailInput.addEventListener('blur', validateForm);
    passwordInput.addEventListener('blur', validateForm);
    confirmPasswordInput.addEventListener('blur', validateForm);
    agreeCheckbox.addEventListener('change', validateForm);

    form.addEventListener('submit', function(event) {
        event.preventDefault(); // –ó–∞–±–æ—Ä–æ–Ω—è—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏

        if (validateForm()) {
            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
            alert('–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
            // –û—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
            form.reset();
            // –í–∏–º–∏–∫–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
            submitButton.disabled = true;
        }
    });

    // Toggle password visibility
    togglePassword.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        passwordInput.classList.toggle('password-visible', type === 'text');
        togglePassword.textContent = type === 'password' ? 'üôà' : 'üêµ';
    });

    toggleConfirmPassword.addEventListener('click', function() {
        const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPasswordInput.setAttribute('type', type);
        confirmPasswordInput.classList.toggle('password-visible', type === 'text');
        toggleConfirmPassword.textContent = type === 'password' ? 'üôà' : 'üêµ';
    });
}